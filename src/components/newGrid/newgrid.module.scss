@use 'sass:math';
@use "src/assets/styles" as styles;

//container
// add flex-direction to the grid. row, column, row-reverse, column-reverse
// flex-wrap: wrap, nowrap, wrap-reverse
// flex-flow: row wrap; combines flex-direction and flex-wrap

// raised section properties: xs, sm, md, lg, xl
// right and left margin properties: sx, sm, md, lg, xl

.Grid {
  &Container {
    display: flex;
    flex-wrap: wrap;
  }
  &Item {
    display: block;
    border: 1px solid red;
    // &:nth-child(1) {
    //   border: 1px solid green;
    // }
  }
  @for $i from 1 to 13 {
    &-xs-#{$i} {
      flex-basis: math.div($i, 12) * 100%;
    }
  }

  @include styles.breakpoint('sm') {
    @for $i from 1 to 13 {
      &-sm-#{$i} {
        flex-basis: math.div($i, 12) * 100%;
      }
    }
  }

  @include styles.breakpoint('md') {
    @for $i from 1 to 13 {
      &-md-#{$i} {
        flex-basis: math.div($i, 12) * 100%;
      }
    }
  }

  @include styles.breakpoint('lg') {
    @for $i from 1 to 13 {
      &-lg-#{$i} {
        flex-basis: math.div($i, 12) * 100%;
      }
    }
  }

  @include styles.breakpoint('xl') {
    @for $i from 1 to 13 {
      &-xl-#{$i} {
        flex-basis: math.div($i, 12) * 100%;
      }
    }
  }

  @each $name, $value in styles.$spacing {
    // &Spacing-#{$name} {
    //   margin: -$value;
    // }
    &Spacing-#{$name} > &Item {
      padding: $value;
    }
  }

  @each $name, $value in styles.$justifyContent {
    &JustifyContent-#{$name} {
      justify-content: $value;
    }
  }

  @each $name, $value in styles.$alignItems {
    &AlignItems-#{$name} {
      align-items: $value;
    }
  }

  @each $name, $value in styles.$alignSelf {
    &AlignSelf-#{$name} {
      align-self: $value;
    }
  }
}
