@use 'sass:math';
@use "src/assets/styles" as styles;

.Grid {
  &Container {
    display: flex;
    flex-wrap: wrap;
  }
  &Item {
    display: block;
  }

  &Raised {
    box-shadow: 0px 0px 15px 2px rgba(153, 153, 153, 0.25);
    border-radius: 5px;
    margin: 20px;
  }
  &Ruler {
    border: 2px solid black;
  }
  &Ruler > &Item {
    border: 2px solid red;
  }

  @for $i from 1 to 13 {
    &-xs-#{$i},
    &-col-#{$i} {
      flex-basis: math.div($i, 12) * 100%;
    }
  }

  @include styles.breakpoint('sm') {
    @for $i from 1 to 13 {
      &-sm-#{$i} {
        flex-basis: math.div($i, 12) * 100%;
      }
    }
  }

  @include styles.breakpoint('md') {
    @for $i from 1 to 13 {
      &-md-#{$i} {
        flex-basis: math.div($i, 12) * 100%;
      }
    }
  }

  @include styles.breakpoint('lg') {
    @for $i from 1 to 13 {
      &-lg-#{$i} {
        flex-basis: math.div($i, 12) * 100%;
      }
    }
  }

  @include styles.breakpoint('xl') {
    @for $i from 1 to 13 {
      &-xl-#{$i} {
        flex-basis: math.div($i, 12) * 100%;
      }
    }
  }

  @each $name, $value in styles.$spacing {
    &FullWidth {
      margin: 0 0 -$value;
    }
    &Spacing-#{$name} > &Item {
      padding: $value;
    }
  }

  @each $name, $value in styles.$justifyContent {
    &JustifyContent-#{$name} {
      justify-content: $value;
    }
  }

  @each $name, $value in styles.$alignItems {
    &AlignItems-#{$name} {
      align-items: $value;
    }
  }

  @each $name, $value in styles.$alignSelf {
    &AlignSelf-#{$name} {
      align-self: $value;
    }
  }
}
